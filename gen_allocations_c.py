#!/usr/bin/env python

# Copyright (c) 2017 Michael P Andersen <m.andersen@cs.berkeley.edu>
# Copyright (c) 2017 Sam Kumar <samkumar@berkeley.edu>
# Copyright (c) 2017 University of California, Berkeley
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of the University of California, Berkeley nor the
#       names of its contributors may be used to endorse or promote products
#       derived from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNERS OR CONTRIBUTORS BE LIABLE FOR
# ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# This file was written by Michael P Andersen, and then modified by
# Sam Kumar to generate C code instead of Go code.

#hopefully this works on python2 and python3
from __future__ import print_function
import requests
import yaml #this is pyaml on pip
import sys
import os
import os.path
import textwrap

rq = requests.get("https://raw.githubusercontent.com/immesys/bw2_pid/master/allocations.yaml")
if rq.status_code != 200:
    print ("Could not obtain allocations file from GitHub")
    sys.exit(1)

doc = yaml.load(rq.text)
def parsedot(s):
    i = s.split(".")
    return (int(i[0])<<24) + (int(i[1])<<16) + (int(i[2]) << 8) + int(i[3])
subnets = sorted([(int(k.split("/")[1]), parsedot(k.split("/")[0]), k ) for k in doc.keys()])

def gen_golang(subnets, doc):
    curpath=os.path.realpath(__file__)
    package = curpath.split("/")[-2]
    ofgo = open("ponames.h", "w")

    print("#ifndef PONAMES_H", file=ofgo)
    print("#define PONAMES_H\n", file=ofgo)
    print("//This file is autogenerated from https://github.com/immesys/bw2_pid/blob/master/allocations.yaml\n", file=ofgo)
    for i in subnets:
        d = doc[i[2]]
        print("//%s (%s): %s" %(d["sym"], i[2], d["short"]), file=ofgo)
        print("//"+"\n//".join(textwrap.wrap(d["desc"], 77)), file=ofgo)
        print("#define BW2_PO_NUM_%s %d" % (d["sym"].upper(), i[1]), file=ofgo)
        print("#define BW2_PO_DF_MASK_%s \"%s\"" % (d["sym"].upper(), i[2]), file=ofgo)
        print("#define BW2_PO_DF_%s \"%s\"" % (d["sym"].upper(), i[2].split("/")[0]), file=ofgo)
        print("#define BW2_PO_MASK_%s %d" % (d["sym"].upper(), i[0]), file=ofgo)
        print("", file=ofgo)
    print("#endif", file=ofgo)
    ofgo.close()


gen_golang(subnets, doc)
